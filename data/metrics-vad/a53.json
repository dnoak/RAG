{
    "path": "data/raw/a53.mp3",
    "sr": 8000,
    "duration": 723.64,
    "vad_metrics": {
        "model_info": "SileroVadModel(model=RecursiveScriptModule(\n  original_name=VADRNNJITMerge\n  (_model): RecursiveScriptModule(\n    original_name=VADRNNJIT\n    (adaptive_normalization): RecursiveScriptModule(original_name=AdaptiveAudioNormalizationNew)\n    (feature_extractor): RecursiveScriptModule(original_name=STFT)\n    (first_layer): RecursiveScriptModule(\n      original_name=Sequential\n      (0): RecursiveScriptModule(\n        original_name=ConvBlock\n        (dw_conv): RecursiveScriptModule(\n          original_name=Sequential\n          (0): RecursiveScriptModule(original_name=Conv1d)\n          (1): RecursiveScriptModule(original_name=Identity)\n          (2): RecursiveScriptModule(original_name=ReLU)\n        )\n        (pw_conv): RecursiveScriptModule(\n          original_name=Sequential\n          (0): RecursiveScriptModule(original_name=Conv1d)\n          (1): RecursiveScriptModule(original_name=Identity)\n        )\n        (proj): RecursiveScriptModule(original_name=Conv1d)\n        (activation): RecursiveScriptModule(original_name=ReLU)\n      )\n      (1): RecursiveScriptModule(original_name=Dropout)\n    )\n    (encoder): RecursiveScriptModule(\n      original_name=Sequential\n      (0): RecursiveScriptModule(original_name=Conv1d)\n      (1): RecursiveScriptModule(original_name=BatchNorm1d)\n      (2): RecursiveScriptModule(original_name=ReLU)\n      (3): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(\n          original_name=ConvBlock\n          (dw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n            (2): RecursiveScriptModule(original_name=ReLU)\n          )\n          (pw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n          )\n          (proj): RecursiveScriptModule(original_name=Conv1d)\n          (activation): RecursiveScriptModule(original_name=ReLU)\n        )\n        (1): RecursiveScriptModule(original_name=Dropout)\n      )\n      (4): RecursiveScriptModule(original_name=Conv1d)\n      (5): RecursiveScriptModule(original_name=BatchNorm1d)\n      (6): RecursiveScriptModule(original_name=ReLU)\n      (7): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(\n          original_name=ConvBlock\n          (dw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n            (2): RecursiveScriptModule(original_name=ReLU)\n          )\n          (pw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n          )\n          (activation): RecursiveScriptModule(original_name=ReLU)\n        )\n        (1): RecursiveScriptModule(original_name=Dropout)\n      )\n      (8): RecursiveScriptModule(original_name=Conv1d)\n      (9): RecursiveScriptModule(original_name=BatchNorm1d)\n      (10): RecursiveScriptModule(original_name=ReLU)\n      (11): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(\n          original_name=ConvBlock\n          (dw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n            (2): RecursiveScriptModule(original_name=ReLU)\n          )\n          (pw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n          )\n          (proj): RecursiveScriptModule(original_name=Conv1d)\n          (activation): RecursiveScriptModule(original_name=ReLU)\n        )\n        (1): RecursiveScriptModule(original_name=Dropout)\n      )\n      (12): RecursiveScriptModule(original_name=Conv1d)\n      (13): RecursiveScriptModule(original_name=BatchNorm1d)\n      (14): RecursiveScriptModule(original_name=ReLU)\n    )\n    (decoder): RecursiveScriptModule(\n      original_name=VADDecoderRNNJIT\n      (rnn): RecursiveScriptModule(original_name=LSTM)\n      (decoder): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(original_name=ReLU)\n        (1): RecursiveScriptModule(original_name=Conv1d)\n        (2): RecursiveScriptModule(original_name=Sigmoid)\n      )\n    )\n  )\n  (_model_8k): RecursiveScriptModule(\n    original_name=VADRNNJIT\n    (adaptive_normalization): RecursiveScriptModule(original_name=AdaptiveAudioNormalizationNew)\n    (feature_extractor): RecursiveScriptModule(original_name=STFT)\n    (first_layer): RecursiveScriptModule(\n      original_name=Sequential\n      (0): RecursiveScriptModule(\n        original_name=ConvBlock\n        (dw_conv): RecursiveScriptModule(\n          original_name=Sequential\n          (0): RecursiveScriptModule(original_name=Conv1d)\n          (1): RecursiveScriptModule(original_name=Identity)\n          (2): RecursiveScriptModule(original_name=ReLU)\n        )\n        (pw_conv): RecursiveScriptModule(\n          original_name=Sequential\n          (0): RecursiveScriptModule(original_name=Conv1d)\n          (1): RecursiveScriptModule(original_name=Identity)\n        )\n        (proj): RecursiveScriptModule(original_name=Conv1d)\n        (activation): RecursiveScriptModule(original_name=ReLU)\n      )\n      (1): RecursiveScriptModule(original_name=Dropout)\n    )\n    (encoder): RecursiveScriptModule(\n      original_name=Sequential\n      (0): RecursiveScriptModule(original_name=Conv1d)\n      (1): RecursiveScriptModule(original_name=BatchNorm1d)\n      (2): RecursiveScriptModule(original_name=ReLU)\n      (3): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(\n          original_name=ConvBlock\n          (dw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n            (2): RecursiveScriptModule(original_name=ReLU)\n          )\n          (pw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n          )\n          (proj): RecursiveScriptModule(original_name=Conv1d)\n          (activation): RecursiveScriptModule(original_name=ReLU)\n        )\n        (1): RecursiveScriptModule(original_name=Dropout)\n      )\n      (4): RecursiveScriptModule(original_name=Conv1d)\n      (5): RecursiveScriptModule(original_name=BatchNorm1d)\n      (6): RecursiveScriptModule(original_name=ReLU)\n      (7): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(\n          original_name=ConvBlock\n          (dw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n            (2): RecursiveScriptModule(original_name=ReLU)\n          )\n          (pw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n          )\n          (activation): RecursiveScriptModule(original_name=ReLU)\n        )\n        (1): RecursiveScriptModule(original_name=Dropout)\n      )\n      (8): RecursiveScriptModule(original_name=Conv1d)\n      (9): RecursiveScriptModule(original_name=BatchNorm1d)\n      (10): RecursiveScriptModule(original_name=ReLU)\n      (11): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(\n          original_name=ConvBlock\n          (dw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n            (2): RecursiveScriptModule(original_name=ReLU)\n          )\n          (pw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n          )\n          (proj): RecursiveScriptModule(original_name=Conv1d)\n          (activation): RecursiveScriptModule(original_name=ReLU)\n        )\n        (1): RecursiveScriptModule(original_name=Dropout)\n      )\n      (12): RecursiveScriptModule(original_name=Conv1d)\n      (13): RecursiveScriptModule(original_name=BatchNorm1d)\n      (14): RecursiveScriptModule(original_name=ReLU)\n    )\n    (decoder): RecursiveScriptModule(\n      original_name=VADDecoderRNNJIT\n      (rnn): RecursiveScriptModule(original_name=LSTM)\n      (decoder): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(original_name=ReLU)\n        (1): RecursiveScriptModule(original_name=Conv1d)\n        (2): RecursiveScriptModule(original_name=Sigmoid)\n      )\n    )\n  )\n), torch_num_threads=1)",
        "sr": 16000,
        "duration": 512.552,
        "process_time": 38.16229989999556
    },
    "transcription_metrics": {
        "model_info": "Whisper(\n  (encoder): AudioEncoder(\n    (conv1): Conv1d(80, 1024, kernel_size=(3,), stride=(1,), padding=(1,))\n    (conv2): Conv1d(1024, 1024, kernel_size=(3,), stride=(2,), padding=(1,))\n    (blocks): ModuleList(\n      (0-23): 24 x ResidualAttentionBlock(\n        (attn): MultiHeadAttention(\n          (query): Linear(in_features=1024, out_features=1024, bias=True)\n          (key): Linear(in_features=1024, out_features=1024, bias=False)\n          (value): Linear(in_features=1024, out_features=1024, bias=True)\n          (out): Linear(in_features=1024, out_features=1024, bias=True)\n        )\n        (attn_ln): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)\n        (mlp): Sequential(\n          (0): Linear(in_features=1024, out_features=4096, bias=True)\n          (1): GELU(approximate='none')\n          (2): Linear(in_features=4096, out_features=1024, bias=True)\n        )\n        (mlp_ln): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)\n      )\n    )\n    (ln_post): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)\n  )\n  (decoder): TextDecoder(\n    (token_embedding): Embedding(51865, 1024)\n    (blocks): ModuleList(\n      (0-23): 24 x ResidualAttentionBlock(\n        (attn): MultiHeadAttention(\n          (query): Linear(in_features=1024, out_features=1024, bias=True)\n          (key): Linear(in_features=1024, out_features=1024, bias=False)\n          (value): Linear(in_features=1024, out_features=1024, bias=True)\n          (out): Linear(in_features=1024, out_features=1024, bias=True)\n        )\n        (attn_ln): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)\n        (cross_attn): MultiHeadAttention(\n          (query): Linear(in_features=1024, out_features=1024, bias=True)\n          (key): Linear(in_features=1024, out_features=1024, bias=False)\n          (value): Linear(in_features=1024, out_features=1024, bias=True)\n          (out): Linear(in_features=1024, out_features=1024, bias=True)\n        )\n        (cross_attn_ln): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)\n        (mlp): Sequential(\n          (0): Linear(in_features=1024, out_features=4096, bias=True)\n          (1): GELU(approximate='none')\n          (2): Linear(in_features=4096, out_features=1024, bias=True)\n        )\n        (mlp_ln): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)\n      )\n    )\n    (ln): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)\n  )\n)",
        "sr": 16000,
        "transcription": " Marcelo, Oi Gabriela, tudo bem? Oi, consegue me ouvir bem? Oi, tudo bem, sim, sim, tudo certo. Bom Marcelo, eu entrei em contato contigo, né? Foi via pesquisa mesmo, prospecção que eu achei vocês. Eu vi que vocês têm uma solução voltada pro recrutamento online, né? Por aqui a gente tem uma solução CRM, que é voltada pra ajudar Ike e comerciais a melhorarem resultados, melhorarem produtividade e previsibilidade em vendas. E aí por isso eu gostaria até de entender um pouco melhor sobre vocês, como vocês vendem essa solução de recrutamento online de vocês, pra ver se a gente consegue fazer algo por vocês nesse sentido, né? De vendas. Tá, vamos fazer o contrário, me conta o que você tem aí, Ike, e aí eu vejo se faz sentido pra gente ou não, pode ser? Certo, certo. Bom, o que que a gente é? A gente é um CRM, né? Como eu já falei. É desenvolvido por nós mesmos, tá? Hoje a gente já atende vários clientes no ramo da tecnologia de RH. Hoje a gente tem um cliente que... Que já tem o RD e tem o Pipe Drive. Como que eu faço numa situação dessa? A gente entraria no caso aí o Pipe Drive. O Pipe Drive é um CRM também, né? Hoje a gente tem vários clientes que saíram no Pipe Drive pro Nectar. E como que é essa transição de informações? Segue migrar tudo direitinho ou eu vou perder informação? A gente migra tudo do Pipe Drive, até as atividades. Histórico, agendamentos, contatos, volumes de negócios... Sim, a migração... O site de vocês tem recorrência? Sim, a gente é SaaS, trabalham no modelo SaaS também. Não, não, eu posso por recorrência a 12 milhão de clientes. Eu fiz uma venda hoje e ele tem mais os 12 milhão de clientes, eu vou ter receita. Não é possível dentro do software de vocês? Sim. Ana, a gente trata isso em produtos de precificação e se o produto é recorrente ou ele é único ou não. Aí quando a gente adiciona um produto ele já vem com as configurações, quando a gente subiu ele, se ele é recorrente ou não. Se for recorrente a gente coloca a quantidade mesmo que vai receber aquele valor. Isso já é calculado no valor da oportunidade, certo? Entendi. E aí? É isso, não precisa ficar me explicando muito, a gente já entende como funciona. Você já conhece mais? Não, não, já conheço como funciona o CRM, talvez eu queria ver alguma demonstração de vocês, algo assim. Sim, com certeza. Seria um próximo passo depois dessa conversa inicial, porque como vocês já utilizam também o CRM, eu gostaria de entender até se vocês têm alguma necessidade específica hoje, algum tipo de dificuldade, tanto no comercial, algo que vocês queiram tratar, que quem sabe a gente consegue ajudá-los, entendeu? Porque para a gente não é interessante a gente agregar somente o tom, né? A gente quer vender algo que agregue valor aí dentro que a gente consiga crescer junto. Plana Sherpa, quem é seu cliente? O Henrique? Deixa eu ver aqui, vou precisar da minha CRM. Henrique Carvalho, diretor comercial de lá. Posso ligar para ele e perguntar? Pode. A gente não está conseguindo bater meta dizendo, a gente poderia estar ajudando mais ele, vocês não estão ajudando. Bom, vou dar uma olhada aqui com o pessoal. Henrique é amigo meu. Ah, sim. Você é um amigo? Sim. Bacana. Bom, Marcelo, falando de... Aliás, você já tinha ouvido falar da Nectar, não? Não, não conhecia. A gente é um software nacional, é daqui do Brasil mesmo. Bom, 062 aqui é Brasília? É Goiânia. Brasília é meu. Mas então, como que hoje funciona a estrutura comercial de vocês? Nós estamos começando então, tem uma estrutura pequena, mas a ideia é ter um modelo de disto, pelo SDR, vendas internas, vendas externas, direitinho. Hoje você faz a venda? Hoje eu tenho uma sócia minha que faz a venda. Ah, sabe o que? E vocês usam qual plano do Pipe Drive? É o Silver? Ah, agora você me pegou, deixou entrar uma vez. Porque a gente tem uma versão gratuita do CRM, que ele compete com a versão Paga Silver do Pipe Drive, entendeu? E ele já te entrega, assim, bastante coisas. Ele te entrega bastante coisas já, além do que o Pipe Drive. O meu é o Prata, isso. E aí, é... O que é o grande diferencial? O Nectar, ele tem bem mais coisas no aspecto gerenciais do que o Pipe Drive, por exemplo. O Pipe Drive, ele tem bastante coisas operacionais. No Nectar também, no Pipe Drive, no Nectar você vai ter mais as coisas operacionais, no caso, para te ajudar na tomada de decisão mais assertiva e tudo mais. Ah, eu precisava ver. Eu estou entrando aqui no demo de vocês, no chat aqui. Sim. Deixa eu ver aqui, talvez... Você consegue fazer uma conta. Você já é redirecionado automaticamente para o nosso plano free, né? E para testar os planos pagos, é só você clicar lá em Teste aqui lá em cima que você consegue testar também por 14 dias os planos pagos. A minha preocupação é como migrar as informações. No plano free você consegue migrar também. Logo, quando você faz a conta, o Nectar já pergunta se você quer fazer alguma importação. Aí, se for do Pipe Drive, é só você clicar lá em Pipe Drive, quando você falar que quer fazer alguma importação, né? E você já coloca o seu token e tudo mais. Sim. E valores... O outro plano, o que que tem a mais diferente? A partir do primeiro plano, você já vai ter a integração com o mailbox, já vai ter a parte de tabela de preço que não tem no plano free. E aí, dos outros em diante, já vai ter como gestão de metas, entre outras funcionalidades. E esse plano estava depois do free, qual que é o que foi? A gente tem três planos. Starter, o Pro e o Enterprise. Estão atendidos em três cenários. A Sherpa está em qual plano? Eita, deixa eu ver aqui. Eles estavam no Pro. E qual é o valor do Pro? Pro é 199 usuários. Isso ano ou isso mês? Como? Isso é... Isso é imaginável. Qual a periodicidade? Mês ou ano? É... Por mês. Nossa, cara, hein? Eu pago 10 dólares, não pergunho mais. É, então. Por isso que a gente tem vários planos, né? Para atender diferentes cenários. Que aí, desde o primeiro Starter, ele é 99 usuários. E aí, depende muito do plano que encaixa para vocês, sabe? Às vezes até o free já atende vocês melhor do que o seu plano prata do Pipe Drive. Aí, à medida que vai surgindo a necessidade, a gente encaixa em outros planos. E o free tem limitação de tempo? Pode ficar com ele? Não, você pode usar ele para sempre, até quando te atender. Então, em suma, a gente tem quatro planos, na verdade. Um free e três pagos. Entendi. Aí vai ser interessante você fazer a conta. É, vai ser interessante você fazer essa conta. E... E aí, à medida que for surgindo as dúvidas, você pode ir me perguntando também. Que eu te responda, tá? É bem tranquilo. E aí, caso você veja que tem necessidade, por exemplo, aí a gente bate uma conversa um pouquinho mais profunda. Sobre o processo de vocês, sobre objetivos, metas, planejamento comercial. E aí, a partir dessa conversa, eu te apresento um nexo personalizado de acordo com o seu cenário. Tá. Você conhece o Faneu de Vendas também? Sim. Com relação a eles, o que você tem? O Pego é também um amigo. Ele está tentando mudar para ele, e hoje eu não mudei. Eles são bons. O bom também é que é uma ferramenta nacional, né? É. Mas é um valor bem mais barato também, né? Porque o dele é 50 reais, porém. É, mais simplificado. No Brasil, na verdade, você vai achar as CRMs de todos os valores. O que que vai justificar um ao outro? As funcionalidades, o que que você vai conseguir fazer a nível de configuração, de parametrização da ferramenta? Geralmente, um que é mais simples, você não vai conseguir configurar tanto assim. Ele é mais fechado e também não tem tantas funcionalidades. E aí, o Nectar, ele é bem mais robusto. Então, ele é bem mais configurável. Por isso que a gente tem vários planos e tem diferentes preços para esses planos também. Entendi. E é todo o negócio de você estar aí em Goiânia, ou você tem operação em São Paulo? A nossa operação é toda aqui em Goiânia. Tá. Não, tá bom. Deixa eu dar uma testada, a gente se fala em breve aí. Tá bom. Certo então, Marcelo? Eu entro em contato contigo ainda no final dessa semana, pra ver como você está me experimentando. Não, eu não vou conseguir ver essa semana. Eu vou ver mais pro meio da semana que vem. Pode falar na sexta da semana que vem, pode ser? Sim, sim. Tá bom. Bom, então, Marcelo, foi um prazer falar contigo. Obrigado. Você também, Gabriela. Até. Tchau.",
        "tokenizer_model": "gpt-3.5-turbo",
        "tokens": 2361,
        "process_time": 132.38852919999044
    }
}