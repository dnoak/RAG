{
    "path": "data/raw/a34.mp3",
    "sr": 8000,
    "duration": 728.46,
    "vad_metrics": {
        "model_info": "SileroVadModel(model=RecursiveScriptModule(\n  original_name=VADRNNJITMerge\n  (_model): RecursiveScriptModule(\n    original_name=VADRNNJIT\n    (adaptive_normalization): RecursiveScriptModule(original_name=AdaptiveAudioNormalizationNew)\n    (feature_extractor): RecursiveScriptModule(original_name=STFT)\n    (first_layer): RecursiveScriptModule(\n      original_name=Sequential\n      (0): RecursiveScriptModule(\n        original_name=ConvBlock\n        (dw_conv): RecursiveScriptModule(\n          original_name=Sequential\n          (0): RecursiveScriptModule(original_name=Conv1d)\n          (1): RecursiveScriptModule(original_name=Identity)\n          (2): RecursiveScriptModule(original_name=ReLU)\n        )\n        (pw_conv): RecursiveScriptModule(\n          original_name=Sequential\n          (0): RecursiveScriptModule(original_name=Conv1d)\n          (1): RecursiveScriptModule(original_name=Identity)\n        )\n        (proj): RecursiveScriptModule(original_name=Conv1d)\n        (activation): RecursiveScriptModule(original_name=ReLU)\n      )\n      (1): RecursiveScriptModule(original_name=Dropout)\n    )\n    (encoder): RecursiveScriptModule(\n      original_name=Sequential\n      (0): RecursiveScriptModule(original_name=Conv1d)\n      (1): RecursiveScriptModule(original_name=BatchNorm1d)\n      (2): RecursiveScriptModule(original_name=ReLU)\n      (3): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(\n          original_name=ConvBlock\n          (dw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n            (2): RecursiveScriptModule(original_name=ReLU)\n          )\n          (pw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n          )\n          (proj): RecursiveScriptModule(original_name=Conv1d)\n          (activation): RecursiveScriptModule(original_name=ReLU)\n        )\n        (1): RecursiveScriptModule(original_name=Dropout)\n      )\n      (4): RecursiveScriptModule(original_name=Conv1d)\n      (5): RecursiveScriptModule(original_name=BatchNorm1d)\n      (6): RecursiveScriptModule(original_name=ReLU)\n      (7): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(\n          original_name=ConvBlock\n          (dw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n            (2): RecursiveScriptModule(original_name=ReLU)\n          )\n          (pw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n          )\n          (activation): RecursiveScriptModule(original_name=ReLU)\n        )\n        (1): RecursiveScriptModule(original_name=Dropout)\n      )\n      (8): RecursiveScriptModule(original_name=Conv1d)\n      (9): RecursiveScriptModule(original_name=BatchNorm1d)\n      (10): RecursiveScriptModule(original_name=ReLU)\n      (11): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(\n          original_name=ConvBlock\n          (dw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n            (2): RecursiveScriptModule(original_name=ReLU)\n          )\n          (pw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n          )\n          (proj): RecursiveScriptModule(original_name=Conv1d)\n          (activation): RecursiveScriptModule(original_name=ReLU)\n        )\n        (1): RecursiveScriptModule(original_name=Dropout)\n      )\n      (12): RecursiveScriptModule(original_name=Conv1d)\n      (13): RecursiveScriptModule(original_name=BatchNorm1d)\n      (14): RecursiveScriptModule(original_name=ReLU)\n    )\n    (decoder): RecursiveScriptModule(\n      original_name=VADDecoderRNNJIT\n      (rnn): RecursiveScriptModule(original_name=LSTM)\n      (decoder): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(original_name=ReLU)\n        (1): RecursiveScriptModule(original_name=Conv1d)\n        (2): RecursiveScriptModule(original_name=Sigmoid)\n      )\n    )\n  )\n  (_model_8k): RecursiveScriptModule(\n    original_name=VADRNNJIT\n    (adaptive_normalization): RecursiveScriptModule(original_name=AdaptiveAudioNormalizationNew)\n    (feature_extractor): RecursiveScriptModule(original_name=STFT)\n    (first_layer): RecursiveScriptModule(\n      original_name=Sequential\n      (0): RecursiveScriptModule(\n        original_name=ConvBlock\n        (dw_conv): RecursiveScriptModule(\n          original_name=Sequential\n          (0): RecursiveScriptModule(original_name=Conv1d)\n          (1): RecursiveScriptModule(original_name=Identity)\n          (2): RecursiveScriptModule(original_name=ReLU)\n        )\n        (pw_conv): RecursiveScriptModule(\n          original_name=Sequential\n          (0): RecursiveScriptModule(original_name=Conv1d)\n          (1): RecursiveScriptModule(original_name=Identity)\n        )\n        (proj): RecursiveScriptModule(original_name=Conv1d)\n        (activation): RecursiveScriptModule(original_name=ReLU)\n      )\n      (1): RecursiveScriptModule(original_name=Dropout)\n    )\n    (encoder): RecursiveScriptModule(\n      original_name=Sequential\n      (0): RecursiveScriptModule(original_name=Conv1d)\n      (1): RecursiveScriptModule(original_name=BatchNorm1d)\n      (2): RecursiveScriptModule(original_name=ReLU)\n      (3): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(\n          original_name=ConvBlock\n          (dw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n            (2): RecursiveScriptModule(original_name=ReLU)\n          )\n          (pw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n          )\n          (proj): RecursiveScriptModule(original_name=Conv1d)\n          (activation): RecursiveScriptModule(original_name=ReLU)\n        )\n        (1): RecursiveScriptModule(original_name=Dropout)\n      )\n      (4): RecursiveScriptModule(original_name=Conv1d)\n      (5): RecursiveScriptModule(original_name=BatchNorm1d)\n      (6): RecursiveScriptModule(original_name=ReLU)\n      (7): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(\n          original_name=ConvBlock\n          (dw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n            (2): RecursiveScriptModule(original_name=ReLU)\n          )\n          (pw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n          )\n          (activation): RecursiveScriptModule(original_name=ReLU)\n        )\n        (1): RecursiveScriptModule(original_name=Dropout)\n      )\n      (8): RecursiveScriptModule(original_name=Conv1d)\n      (9): RecursiveScriptModule(original_name=BatchNorm1d)\n      (10): RecursiveScriptModule(original_name=ReLU)\n      (11): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(\n          original_name=ConvBlock\n          (dw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n            (2): RecursiveScriptModule(original_name=ReLU)\n          )\n          (pw_conv): RecursiveScriptModule(\n            original_name=Sequential\n            (0): RecursiveScriptModule(original_name=Conv1d)\n            (1): RecursiveScriptModule(original_name=Identity)\n          )\n          (proj): RecursiveScriptModule(original_name=Conv1d)\n          (activation): RecursiveScriptModule(original_name=ReLU)\n        )\n        (1): RecursiveScriptModule(original_name=Dropout)\n      )\n      (12): RecursiveScriptModule(original_name=Conv1d)\n      (13): RecursiveScriptModule(original_name=BatchNorm1d)\n      (14): RecursiveScriptModule(original_name=ReLU)\n    )\n    (decoder): RecursiveScriptModule(\n      original_name=VADDecoderRNNJIT\n      (rnn): RecursiveScriptModule(original_name=LSTM)\n      (decoder): RecursiveScriptModule(\n        original_name=Sequential\n        (0): RecursiveScriptModule(original_name=ReLU)\n        (1): RecursiveScriptModule(original_name=Conv1d)\n        (2): RecursiveScriptModule(original_name=Sigmoid)\n      )\n    )\n  )\n), torch_num_threads=1)",
        "sr": 16000,
        "duration": 530.004,
        "process_time": 35.387080600019544
    },
    "transcription_metrics": {
        "model_info": "Whisper(\n  (encoder): AudioEncoder(\n    (conv1): Conv1d(80, 1024, kernel_size=(3,), stride=(1,), padding=(1,))\n    (conv2): Conv1d(1024, 1024, kernel_size=(3,), stride=(2,), padding=(1,))\n    (blocks): ModuleList(\n      (0-23): 24 x ResidualAttentionBlock(\n        (attn): MultiHeadAttention(\n          (query): Linear(in_features=1024, out_features=1024, bias=True)\n          (key): Linear(in_features=1024, out_features=1024, bias=False)\n          (value): Linear(in_features=1024, out_features=1024, bias=True)\n          (out): Linear(in_features=1024, out_features=1024, bias=True)\n        )\n        (attn_ln): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)\n        (mlp): Sequential(\n          (0): Linear(in_features=1024, out_features=4096, bias=True)\n          (1): GELU(approximate='none')\n          (2): Linear(in_features=4096, out_features=1024, bias=True)\n        )\n        (mlp_ln): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)\n      )\n    )\n    (ln_post): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)\n  )\n  (decoder): TextDecoder(\n    (token_embedding): Embedding(51865, 1024)\n    (blocks): ModuleList(\n      (0-23): 24 x ResidualAttentionBlock(\n        (attn): MultiHeadAttention(\n          (query): Linear(in_features=1024, out_features=1024, bias=True)\n          (key): Linear(in_features=1024, out_features=1024, bias=False)\n          (value): Linear(in_features=1024, out_features=1024, bias=True)\n          (out): Linear(in_features=1024, out_features=1024, bias=True)\n        )\n        (attn_ln): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)\n        (cross_attn): MultiHeadAttention(\n          (query): Linear(in_features=1024, out_features=1024, bias=True)\n          (key): Linear(in_features=1024, out_features=1024, bias=False)\n          (value): Linear(in_features=1024, out_features=1024, bias=True)\n          (out): Linear(in_features=1024, out_features=1024, bias=True)\n        )\n        (cross_attn_ln): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)\n        (mlp): Sequential(\n          (0): Linear(in_features=1024, out_features=4096, bias=True)\n          (1): GELU(approximate='none')\n          (2): Linear(in_features=4096, out_features=1024, bias=True)\n        )\n        (mlp_ln): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)\n      )\n    )\n    (ln): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)\n  )\n)",
        "sr": 16000,
        "transcription": " Você ligou para Malhas Teda para falar com Comercial, Tecle 4, Financeiro, Tecle 5, Compras, Tecle 6, RH, Tecle 7 ou aguarde para ser atendido. Oi, Alessandra, bom dia, tudo bem? Certo, eu queria muito o Eliel, ele tá por aí? Tá bom, obrigada. Você ligou Comercial, Tecle 4, Financeiro, Tecle 5, Compras, Tecle 6, RH, Tecle 7 ou aguarde para ser atendido. Oi, Isabela, eu queria muito falar com o Eliel, seria? É a Malu da Nekker CRM? Só um minuto, vê se está disponível, tá bom? Tá bom, obrigada. Oi, Eliel, aqui é a Malu da Nekker CRM, tudo bem? Malu, tu, você tava me ligando, né? Eu tava numa reunião ali, tava vendo que os meia dois estavam bombando aqui. Desculpa, já saiu da reunião? Eu saí, mas tô enrolado. Faz sentido, Malu. Marcar uma reunião, entendeu? Vocês conseguem implantar o CRM aqui, não usando API, e sim, views, cuidado? Então, foi até aquele ponto que você falou que seu RP é bem travado, né, Eliel? Eu preciso avaliar com o nosso time técnico se a gente faz esse tipo de integração via views. Então, faz assim, vê com eles, se eles falarem sim, você fala comigo. Eliel, fazemos, aí a gente continua. Se não fazemos, a gente para. Tá bom, aí eu mando uma mensagem no seu WhatsApp e já prossoirei uma data. Semana que vem você tá tranquilo? Semana que vem eu tô viajando pelo Rio. Se você puder fazer isso à noite, a gente pode conversar. Durante o dia eu não consigo. Tá, beleza. Tranquilo. Aí, assim, nós temos vocês com referência ali por causa do Giant, né? Então, vocês têm prioridade, mas a gente tá olhando outros CRMs, tá? O senhor comentou que é o seu esforço, e quais são os outros? Ah, tem vários agora. Agora surgiu um monte aí. Agora a turma lá do acelerador já pode dar uns 10 para nós se o Nectar não funcionar. Não atender com essa integração de view, né? Só uma dúvida, qual que é o nome do RP de vocês? Microdata, chame. Microdata. E qual que é a outra ferramenta que vocês integram junto com ele, que é a geração de pedido? É Túrium. E Túrium. A integração... Tu, Túrium. Túrium. A integração via view seria com microdata ou Túrium? Não, com microdata. O que que acontece aí? A Túrium é uma startup e quem construiu a Túrium são ex-gestores do microdata. Gestores, arquitetos e desenvolvedores. Então essa turma saiu da microdata, identificou uma lacuna ali no SEMA e criou uma força de vendas. E esse força de vendas vai lá dentro do banco de dados, data, e extrai informações e devolve informações. Como se fosse uma API, mas ele vai lá no banco de dados, certo? Porém, a microdata não abre mais o banco para nenhuma outra apresentar a não ser Túrium, entendeu? E aí para integrar com o Aliso, que é o CRM que eu uso hoje, a gente criou views com informações e o CRM vai usar. O CRM não lança pedidos, ele só analisa dados e a gente faz a introdução de agendamentos, contatos. Porém, isso não é gravado no RP porque o RP não está preparado para isso. Então tudo isso fica dentro do CRM, entendeu? Então na verdade o CRM só vai buscar informações para a gente não ter qual foi a última nota, qual foi o último pedido, o cliente tem crédito, não tem, qual é o endereço. Mas o pedido sempre vai ser lançado dentro do Túrium. O Túrium lança, joga dentro do RP. E aí o RP reflete para o Túrium as informações de histórico e devolve isso também para o CRM. Ao mesmo tempo o Power BI que a gente usa para análise de dados vai dentro do RP e traz a informação também. Só que o RP que a gente tem também faz a gestão do nosso BI. Então ele mesmo entra dentro do banco e faz análise, traz as informações. Então o CRM precisa entender que nós não temos API e que nós estamos fazendo isso hoje através de um céu de 8 meses fazer isso acontecer. Mas aconteceu. Então eu acredito que o novo CRM que a gente quer incorporar aqui seria mais intuitivo, mais dinâmico, a visão que a gente olha para vocês aí, teria uma facilidade que as views já existem. Entendi. Então antes não tinha. Então foi o... isso aí vai ficar mais fácil para vocês. Entendi. Mas eu preciso... a pergunta chave é se vocês conseguirem fazer integração com views, né? E aí depois se precisar de mais informações técnicas de como é construído essas views, daí a gente pode levantar e passar para vocês, tá? Então assim, seria importante... não, eu só faço integração se for API. Então, tchau, obrigado. Entendi. Perfeito. Ele é muito obrigado. Olha, provavelmente a gente vai precisar fazer uma reunião mais técnica se o pessoal falar que tem como fazer essa integração via views. E aí sabe o que a gente pode fazer? Já deixar essa reunião técnica agendada, se for possível. E aí depois da reunião técnica eu já marco para te mostrar o tema. Sim, eu não sou técnico. Eu preciso conversar com os portugueses para a gente poder ver a agenda, tá? Aham, tranquilo. Eu sou engenheiro mas não de software. Então assim, eu preciso entender a demanda da tua turma aí e aí eu ver com a equipe da Microdata, que é o RP, que momento que eles teriam uma agenda para a gente fazer essa reunião. Mas eles vão querer a demanda dessa turma, o que que você precisa, para ver quem que ele vai colocar na reunião. Tá, tranquilo. Que aí é uma empresa que não é a minha, então eu preciso saber muito bem o que vocês precisam para mim ver quem do lado é lá, pode dar essa informação e em que momento ele estaria disponível para a gente agendar a reunião. Tá, só mais uma dúvida, só para confirmar o que você acabou de falar. A ideia é as informações de pedido que vão para a Microdata ficarem registradas no CRM. Requestem, vamos lá, o CRM eu vou ver. Quais clientes estão sem comprar há 180 dias? Ele vai ter essa informação aonde? Buscando do RP. Porque se eu tiver que fazer alimentação manual de dados, de nota fiscal, pedido, cadastro no CRM, aí não faz sentido. Por isso essa integração, o que já está sendo feito e arquivado dentro do RP, o CRM vai lá, busca e traz para ser apresentado para o usuário que é o vendedor, entendeu? E aí lembrando que o RP não tem campus para guardar algumas informações, então esses campus vão ficar todos eles dentro do CRM. Tá, beleza. Beleza? Aham, tranquilo. E uma dúvida, Elienel, qual que é o volume de vendas mensais de vocês? A tida está projetada esse ano para 47 milhões de faturamento. No passado a gente faturou 47,5. Tá, volume de vendas mensais seria quantos vendos por mês? Depende do número de vendas? É, porque o seu ticket médio hoje é em torno de 5. Não, Marca, pegar o mês, falar o mês, é que dependendo dos dias úteis tem algumas variações, né? Então só para você ter uma ideia aqui, no mês de janeiro nós faturamos 4.233 milhões com um ticket médio de 12.791, com um número de clientes, isso por cliente, tá? 331 clientes, tá? Então é essa configuração por cliente. E um cliente normalmente compra uma vez por mês? Nem sempre, pode comprar mais vezes, tá? Porque eu tenho cliente que compra uma vez por ano, tem cliente que compra uma vez a cada seis meses, tem cliente que compra uma vez por semana, tem cliente que compra uma vez por mês, entendeu? Então nós temos variações aí. No CRM atual que a gente tem, eu tenho uma base onde eu consigo saber quantos clientes compro comigo em 30 dias, em 60, em 90, entendeu? Então é um análise mais detalhado, a gente até consegue chegar nesse número. Mas deixa eu ver se eu tenho aqui, porque nós temos dois caminhos, uma coisa é o faturamento, outra coisa é venda, tá? É importante deixar claro que aqui na TEDA o comercial é cobrado por faturamento e não por venda. Mas eu como gestor comercial entendo que se eu não tiver uma carteira de vendas e cobro a minha equipe por vendas, eu não vou conseguir faturar. Mas a TEDA enxerga o faturamento e não a venda, tá? Porque depois da hora que se lhe dados, eu consigo os dados só de vendas e não do faturamento. Aí a diretoria vai ficar na minha cabeça, claro que vai faturar. Ticket médio, tá? Ticket médio, TEDA, deixa eu ver, eu tenho ele aqui. Aí seria por nota fiscal, tá? 9.105. Então assim, preço médio, R$ 0,50,14 quilo, que é a unidade que a gente tem. Tá, beleza, tranquilo. Fechado, ele é o. A gente vai se falando e eu vou analisar essas possibilidades aqui junto com o pessoal e já te retorno. Tá bom, mas não se apresenta o tempo, tá? Se eles não conseguirem, você só me dá o que? Que aí eu já ponho o xzinho aqui, a hora que vocês conseguirem a gente abre de novo, mas eu preciso evoluir com isso, tá bom? Tranquilo, conta comigo. Tá, um abraço, tchau, tchau. Desculpa, é Nayara, é isso? Malu, Malu. Nayara, quem que é Nayara? Nayara é cliente que tá cobrando. Tá bom, Malu, tá ótimo. Sem problema, tchau, tchau, um abraço, obrigado a eu.",
        "tokenizer_model": "gpt-3.5-turbo",
        "tokens": 2587,
        "process_time": 139.23689790000208
    }
}